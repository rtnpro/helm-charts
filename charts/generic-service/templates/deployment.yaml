apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "generic-service.fullname" . }}
  labels:
    app: {{ template "generic-service.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  #serviceAccountName: {{ default "default" .Values.serviceAccountNameOverride | quote }}
  selector:
    matchLabels:
      app: {{ template "generic-service.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "generic-service.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{  template "generic-service.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            {{- if .Values.envValues }}
            {{- range $key, $value := .Values.envValues }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end -}}
            {{- end -}}

            {{- if .Values.envSecrets }}
            {{- $global := . }}
            {{- range $key, $_ := .Values.envSecrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ template "generic-service.fullname" $global }}
                  key: {{ $key }}
            {{- end -}}
            {{- end }}

          ports:
            - containerPort: {{ .Values.service.internalPort }}
          livenessProbe:
            initialDelaySeconds: 15
            timeoutSeconds: 5
            httpGet:
              path: {{ .Values.service.livenessProbe }}
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            initialDelaySeconds: 20
            timeoutSeconds: 5
            httpGet:
              path: {{ .Values.service.readinessProbe }}
              port: {{ .Values.service.internalPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
          {{- if .Values.persistence.enabled }}
          - name: data
            mountPath: {{ .Values.persistence.mountPath }}
            {{- if .Values.persistence.subPath }}
            subPath: {{ .Values.persistence.subPath }}
            {{- end }}
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 12 }}
          {{- end }}
      volumes:
      {{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 8 }}
      {{- end }}
      {{- if .Values.config }}
        - name: config-volume
          configMap:
            name: {{ template "generic-service.fullname" . }}
      {{- end }}
{{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
{{- else if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app: "{{ template "generic-service.name" . }}"
          release: {{ .Release.Name | quote }}
          heritage: {{ .Release.Service | quote }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
      {{- end }}
      {{- end }}
{{- end }}